"use client";

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Skeleton } from "@/components/ui/skeleton";
import { Table, TBody, TD, TH, THead, TR } from "@/components/ui/table";
import { useRankingStore } from "@/lib/store";

export function RankingResult() {
  const { results, loading } = useRankingStore();

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>Ranking result</CardTitle>
        <CardDescription>
          View the ordered list with scores and rationale generated by the OpenAI model.
        </CardDescription>
      </CardHeader>
      <CardContent>
        {loading ? (
          <div className="space-y-3">
            {[...Array(3)].map((_, index) => (
              <Skeleton key={index} className="h-16 w-full" />
            ))}
          </div>
        ) : results.length === 0 ? (
          <p className="text-sm text-gray-500">
            Run the ranking to see the AI generated order and commentary.
          </p>
        ) : (
          <div className="overflow-hidden rounded-xl border border-gray-200">
            <Table>
              <THead>
                <TR>
                  <TH className="w-12">Rank</TH>
                  <TH>Candidate</TH>
                  <TH className="w-24 text-center">Score</TH>
                  <TH>Reason</TH>
                </TR>
              </THead>
              <TBody>
                {results.map((item, index) => (
                  <TR key={item.candidate}>
                    <TD className="font-semibold">{index + 1}</TD>
                    <TD className="font-medium text-gray-900">{item.candidate}</TD>
                    <TD className="text-center text-sm font-semibold text-gray-700">{Math.round(item.score)}</TD>
                    <TD className="text-sm text-gray-600">{item.reason || "No reason provided"}</TD>
                  </TR>
                ))}
              </TBody>
            </Table>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
